@using FishingProject.Models
@model FishingProject.Models.ProductOrderViewModel

@{
    ViewBag.Title = "Merchandise";
}

<u><h2>Merchandise</h2></u>
<br />
@using (Html.BeginForm("AddOrder", "Organizations", "Post"))
{
    @Html.AntiForgeryToken()
    foreach (var product in Model.Product)
    {
        if (product.ProductId == 1)
        {
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-10">
                        <img src="~/Content/image/blackshirt.jpg" width="200" height="200" />
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(modelItem => product.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(modelItem => product.Name)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(modelItem => product.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(modelItem => product.Price)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(modelItem => product.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(modelItem => product.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(modelItem => product.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(modelItem => product.Size, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(modelItem => product.Size, new SelectList(Enum.GetValues(typeof(ProductSize))), "Select Size", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Add To Cart" class="btn btn-primary"/>
                    </div>
                </div>
            </div>
        }
        else if (product.ProductId > 1)
        {
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-10">
                        <img src="~/Content/image/blacklongsleeve.jpg" width="200" height="200" />
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(modelItem => product.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(modelItem => product.Name)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(modelItem => product.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(modelItem => product.Price)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(modelItem => product.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(modelItem => product.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(modelItem => product.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(modelItem => product.Size, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(modelItem => product.Size, new SelectList(Enum.GetValues(typeof(ProductSize))), "Select Size", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Add To Cart" class="btn btn-primary"/>
                    </div>
                </div>
            </div>
        }

        <br />
        <br />
    }
    <div>
        <input type="submit" value="View Order" class="btn btn-primary" onclick="location.href='@Url.Action("ViewOrder", "Organizations")'" />
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Home")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

