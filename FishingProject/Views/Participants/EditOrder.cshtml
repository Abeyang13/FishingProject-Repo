@using FishingProject.Models
@model FishingProject.Models.ProductOrder

@{
    ViewBag.Title = "EditOrder";
}

@using (Html.BeginForm("EditOrder", "Participants", "Post"))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Edit Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductOrderId)
        @Html.HiddenFor(model => model.ProductId)
        @Html.HiddenFor(model => model.OrderId)
        @Html.HiddenFor(model => model.Paid)
        @Html.HiddenFor(model => model.Total)

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Product.Size, new SelectList(Enum.GetValues(typeof(ProductSize))), "Select Size", new { @class = "form-control" })
            </div>
        </div>
        @Html.HiddenFor(model => model.ProductId)
        @Html.HiddenFor(model => model.OrderId)
        @Html.HiddenFor(model => model.Paid)
        @Html.HiddenFor(model => model.Total)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Order", "ViewOrder", "Participants")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
